# Check for a .configured file generated by configure script
ifeq ($(wildcard .configured),)
$(error You must run `./configure` before you can build.)
endif

BUILDTARGET ?=
ifeq ($(strip $(BUILDTARGET)),)
	TARGETARG:=
else
	TARGETARG:=--target=$(BUILDTARGET)
endif

BUILDLINKER ?=
ifeq ($(strip $(BUILDLINKER)),)
	LINKER:=
else
	LINKER:=-C linker=$(BUILDLINKER)
endif

RC ?= rustc

ifeq ($(strip $(BUILDLINKER)),)
	CC = @CC@
else
	CC = $(BUILDLINKER)
endif

RFLAGS ?= -C opt-level=3
RUSTFLAGS ?= -Anon_snake_case
CPPFLAGS ?=
CFLAGS ?=
LDFLAGS ?=
BIN = bin/dproc
BINDIR = bin
SRC = src/main.rs
PREFIX ?= @PREFIX@
GNSRCDIR ?= /tmp/e10b5eccac1ecb4e8706e3898719b197a1e9d10d65e860192d38155cb31233ea

all: build

build: src/*
	mkdir -p bin
	mkdir -p obj
	$(CC) $(CPPFLAGS) $(CFLAGS) -c lib/libmysolvers.c -o obj/libmysolvers.o
	ar rcs obj/libmysolvers.a obj/libmysolvers.o
	$(RC) $(RFLAGS) $(RUSTFLAGS) $(TARGETARG) $(LINKER) -Lobj -lstatic=mysolvers $(SRC) -o $(BIN)

upgrade-c-libs:
	cd lib && \
	curl -LO https://raw.githubusercontent.com/matthewyang204/libmysolvers/refs/heads/main/libmysolvers.c && \
	curl -LO https://raw.githubusercontent.com/matthewyang204/libmysolvers/refs/heads/main/libmysolvers.h

clean:
	rm -rf $(BINDIR)
	rm -rf dist
	rm -rf obj
	
install:
	mkdir -p $(PREFIX)/$(BINDIR)
	rm -rf $(PREFIX)/$(BIN)
	cp $(BIN) $(PREFIX)/$(BIN)
	
uninstall:
	rm -rf $(PREFIX)/$(BIN)

dist: clean
	rm -rf $(GNSRCDIR)
	cp -R . $(GNSRCDIR)
	mkdir -p dist
	find $(GNSRCDIR) -type d -name ".git" -print
	find $(GNSRCDIR) -type d -name ".git" -exec rm -rf {} +
	tar -cvJf dist/dproc-1.1.1.tar.xz -C $(GNSRCDIR) .
	rm -rf $(GNSRCDIR)

.PHONY: all build clean install uninstall
