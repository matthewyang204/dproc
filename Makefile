# Check for a .configured file generated by configure script
ifeq ($(wildcard .configured),)
$(error You must run `./configure` before you can build.)
endif

BUILDTARGET ?=
ifeq ($(strip $(BUILDTARGET)),)
	TARGETARG:=
else
	TARGETARG:=--target=$(BUILDTARGET)
endif

BUILDLINKER ?=
ifeq ($(strip $(BUILDLINKER)),)
	LINKER:=
else
	LINKER:=-C linker=$(BUILDLINKER)
endif

RC = rustc
RFLAGS = -C opt-level=3
RUSTFLAGS=-Anon_snake_case
BIN = bin/dproc
BINDIR = bin
SRC = src/main.rs
PREFIX ?= /usr/local
GNSRCDIR ?= /tmp/e10b5eccac1ecb4e8706e3898719b197a1e9d10d65e860192d38155cb31233ea

all: build

build: src/*
	mkdir -p bin
	$(RC) $(RFLAGS) $(RUSTFLAGS) $(TARGETARG) $(LINKER) $(SRC) -o $(BIN)
	
clean:
	rm -rf $(BINDIR)
	rm -rf dist
	
install:
	mkdir -p $(PREFIX)/$(BINDIR)
	rm -rf $(PREFIX)/$(BIN)
	cp $(BIN) $(PREFIX)/$(BIN)
	
uninstall:
	rm -rf $(PREFIX)/$(BIN)

dist:
	mkdir -p dist
	rm -rf $(GNSRCDIR)
	cp -R . $(GNSRCDIR)
	find $(GNSRCDIR) -type d -name ".git" -print
	find $(GNSRCDIR) -type d -name ".git" -exec rm -rf {} +
	tar -cvJf dist/dproc-1.0.1.tar.xz $(GNSRCDIR)
	rm -rf $(GNSRCDIR)

.PHONY: all build clean install uninstall
